# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-02-15 23:16+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:3
msgid ""
"Title: Contributing to the YunoHost core Summary: Short version for index "
"and feeds"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:5
msgid "## Contributing to the YunoHost core"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:9
msgid ""
"You wish to add a new feature in the YunoHost core, but don't know how to "
"proceed? This guide takes you through the various steps of the development "
"and contribution process."
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:12
msgid ""
"If you're looking for stuff to implement or fix, the bug-tracker is "
"[here](https://dev.yunohost.org/issues/) !"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:14
#, no-wrap
msgid ""
"**Come say hi to us in the [dev "
"chatroom](xmpp:dev@conference.yunohost.org?join)** ! If you don't have an "
"XMPP client, you can join using the widget at the bottom right of this "
"page.\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:16
msgid "### Setting up a development environment"
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:22
msgid ""
"**Use [ynh-dev](https://github.com/YunoHost/ynh-dev)** (see the README) to "
"setup a development environment - locally in a virtual machine, or on a "
"VPS.  This will setup a working YunoHost instance, using directly the git "
"repositories (with symlinks). That way, you will be able to edit files, test "
"your changes in real time, commit stuff and push/pull directly from your "
"development environment."
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:29
#, no-wrap
msgid ""
"- **Implement and test your feature**. Depending on what you want to "
"develop, you\n"
"  will want to :\n"
"   - **Python/CLI core** : work in `/vagrant/yunohost/`\n"
"   - **Web administration interface** : work in `/vagrant/yunohost-admin/`\n"
"   - You can also work on the other projects on which YunoHost is built \n"
"     (SSOwat, moulinette) in similar ways\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:31
msgid "### Working on the YunoHost Python/CLI core"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:33
msgid "- Work in `/vagrant/yunohost/`."
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:35
msgid "- Run `/vagrant/ynh-dev use-git yunohost`."
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:42
msgid ""
"The actionsmap file (`data/actionsmap/yunohost.yml`) defines the various "
"categories, actions and arguments of the yunohost CLI. Define how you want "
"users to use your feature, and add/edit the corresponding categories, "
"actions and arguments. For example in `yunohost domain add some.domain.tld`, "
"the category is `domain`, the action is `add`, and `some.domain.tld` is an "
"argument."
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:48
msgid ""
"Moulinette will automatically map commands in the actionsmap to python "
"functions (and their arguments) located in `src/yunohost/`. For example, "
"typing `yunohost domain add some.domain.tld` will call the function "
"`domain_add(domainName)` in `domain.py`, with the argument `domainName` "
"equal to `\"some.domain.tld\"`."
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:50
msgid "##### Helpers / coding style"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:52
msgid "- To handle exceptions, you should raise some `MoulinetteError()`"
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:57
msgid ""
"To help with internationalizing the messages, use "
"`m18n.n('some-message-id')` and put your string in `locales/en.json`. You "
"can also put arguments and use them in the string with "
"`{{some-argument:s}}`. Don't edit other locales files, this will be done "
"using [weblate](https://translate.yunohost.org/) !"
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:60
msgid ""
"YunoHost tries to follow the [pep8](http://pep8.org/) coding style. Tools "
"exist to automatically check conformity."
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:62
msgid "- Name of \"private\" functions should start with a `_`"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:64 /home/jb/Projects/Simon/content/pages/contributor/dev.md:104
msgid "##### Don't forget"
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:68
msgid ""
"(Might not be necessary anymore) Each time you edit the actionsmap, you "
"should force the refresh of the cache with `rm "
"/var/cache/moulinette/actionsmap/yunohost.pkl`"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:70
msgid "### Working on the YunoHost web administration interface"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:72
msgid "- Work in `/vagrant/yunohost-admin/src/`."
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:76
msgid ""
"Run `/vagrant/ynh-dev use-git yunohost-admin`. It launches gulp, such as "
"each time you modify sources, it recompiles the code and you can use it by "
"refreshing (Ctrl+F5) your web administration. To stop the command, just do "
"Ctrl+C."
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:85
msgid ""
"The web interface uses the API to interact with YunoHost. The API "
"commands/requests are also defined via the actionsmap. For instance, "
"accessing the page ```https://domain.tld/yunohost/api/users``` corresponds "
"to a `GET /users` requests on the YunoHost API. It is mapped to the function "
"`user_list()`. Accessing the URL should display the json returned by this "
"function. 'GET' requests are typically meant to ask information to the "
"server.  'POST' requests are meant to ask the server to edit/change some "
"information, or to execute some actions."
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:90
msgid ""
"`js/yunohost/controllers` contains the javascript parts, and define which "
"requests to make to the API when loading a specific page of the interface, "
"and how to process the data to generate the page, using templates."
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:97
msgid ""
"`views` contains the various templates for the pages of the interface. In "
"the template, data coming from the javascript part can be used with the "
"syntax `{{some-variable}}`, which will be replaced when building/accessing "
"the page.  It is also possible to have conditions using the "
"[handlebars.js](http://handlebarsjs.com) syntax : ```{{#if "
"some-variable}}<p>Some conditional HTML code here !</p>{{/if}}```"
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:102
msgid ""
"For internationalized strings, use `y18n.t('some-string-code')` in the "
"javascript, or `{{t 'some-string-code'}}` in the HTML template, and put your "
"string in `locales/en.json`. Don't edit other locales files, this will be "
"done using [weblate](https://translate.yunohost.org/) !"
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:108
msgid ""
"Each time you edit the actionsmap, you should restart the yunohost-api : "
"```service yunohost-api restart``` (You'll need to retype your admin "
"password in the web interface)"
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:111
msgid ""
"You might need to force-clear the cache of your browser sometimes to refresh "
"the javascript and/or html (so each time you edit something in `js` or "
"`views`)."
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:114
msgid "### Your feature is ready and you want it to be integrated in YunoHost"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:120
#, no-wrap
msgid ""
"- Fork the relevant repo on Github, and commit stuff to a new branch. We "
"recommend\n"
"  to name the branch with the following convention :\n"
"  - For an enhancement or new feature : "
"`enh-REDMINETICKET-name-of-feature`\n"
"  - For a bugfix `fix-REDMINETICKET-description-of-fix`\n"
"  - `REDMINETICKET` is optional and is the id of a corresponding ticket on "
"RedMine.\n"
msgstr ""

#. type: Bullet: '- '
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:123
msgid ""
"Once you're ready, open a Pull Request (PR) on Github. Please include "
"`[fix]` or `[enh]` at the beginning of the title of your PR."
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:126
msgid ""
"- After reviewing, testing and validation by other contributors, your branch "
"should be merged in `testing` (?) !"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:133
#, no-wrap
msgid ""
"<script type=\"text/javascript\" "
"src=\"/jappix/javascripts/mini.min.js\"></script>\n"
"<script type=\"text/javascript\">\n"
"    // Jappix mini chat\n"
"    $(\".actions\").css('opacity', 0);\n"
"    jQuery.ajaxSetup({cache: false});\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/dev.md:157
#, no-wrap
msgid ""
"    var ADS_ENABLE = 'off';\n"
"    var JAPPIX_STATIC = '/jappix/';\n"
"    var HOST_BOSH = 'https://im.yunohost.org/http-bind/';\n"
"    var ANONYMOUS = 'on';\n"
"     JappixMini.launch({\n"
"        connection: {\n"
"           domain: \"anonymous.yunohost.org\",\n"
"        },\n"
"        application: {\n"
"           network: {\n"
"              autoconnect: false,\n"
"           },\n"
"           interface: {\n"
"              showpane: false,\n"
"              animate: false,\n"
"           },\n"
"           groupchat: {\n"
"              open: ['dev@conference.yunohost.org'],\n"
"              suggest: ['support@conference.yunohost.org']\n"
"           }\n"
"        },\n"
"     });\n"
"</script>\n"
msgstr ""
