# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-02-15 23:16+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:2
msgid "Title: Create a YunoHost Live ISO"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:5
#, no-wrap
msgid ""
"Tested on Debian Wheezy (should work on Ubuntu as well).    \n"
"Original tutorial here: "
"http://willhaley.com/blog/create-a-custom-debian-live-environment/\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:7
#, no-wrap
msgid ""
"**Warning**: I have **highlighted** all the places you should be in the "
"**chroot** environment.\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:12
#, no-wrap
msgid ""
"1. Install applications we need to build the environment. \n"
"```bash\n"
"sudo apt-get install debootstrap syslinux squashfs-tools genisoimage "
"memtest86+ rsync\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:18
#, no-wrap
msgid ""
"2. Setup the base Debian environment.  I am using wheezy for my distribution "
"and i386 for the architecture.  Please do change your mirror if you are not "
"in the Netherlands or know of a mirror close to you.\n"
"```bash\n"
"mkdir live_boot && cd live_boot\n"
"sudo debootstrap --arch=i386 --variant=minbase wheezy chroot "
"http://ftp.nl.debian.org/debian/\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:23
#, no-wrap
msgid ""
"3. A couple of important steps before we chroot.\n"
"```bash\n"
"sudo mount -o bind /dev chroot/dev && sudo cp /etc/resolv.conf "
"chroot/etc/resolv.conf\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:28
#, no-wrap
msgid ""
"4. Chroot to our Debian environment.\n"
"```bash\n"
"sudo chroot chroot\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:41
#, no-wrap
msgid ""
"5. **chroot**\n"
"Set a few required variables and system settings in our Debian "
"environment.\n"
"```bash\n"
"mount none -t proc /proc && \n"
"mount none -t sysfs /sys && \n"
"mount none -t devpts /dev/pts && \n"
"export HOME=/root && \n"
"export LC_ALL=C && \n"
"apt-get install dialog dbus --yes && \n"
"dbus-uuidgen > /var/lib/dbus/machine-id && \n"
"apt-get update\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:46
#, no-wrap
msgid ""
"6. **chroot** Set the root password to **yunohost**\n"
"```bash\n"
"passwd root\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:56
#, no-wrap
msgid ""
"7. **chroot** Install the required packages, replace the kernel version if "
"needed.\n"
"```bash\n"
"apt-get install --no-install-recommends \\\n"
"linux-image-3.2.0-4-486 live-boot \\\n"
"net-tools wireless-tools wpagui tcpdump wget openssh-client \\\n"
"xserver-xorg-core xserver-xorg xinit xterm \\\n"
"pciutils usbutils gparted ntfsprogs hfsprogs rsync dosfstools syslinux "
"partclone nano pv \\\n"
"chromium-browser libnss3-tools openbox git ca-certificates openssl\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:61
#, no-wrap
msgid ""
"8. **chroot** NetworkManager can break your network configuration in the "
"chroot environment. You can install it afterward, and CTRL-C during the "
"installation\n"
"```bash\n"
"apt-get --no-install-recommends install network-manager\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:67
#, no-wrap
msgid ""
"9. **chroot** Install YunoHost\n"
"```bash\n"
"git clone https://github.com/YunoHost/install_script /tmp/yunohost_install\n"
"cd /tmp/yunohost_install && ./install_yunohost -a\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:76
#, no-wrap
msgid ""
"10. **chroot** Set parameters in order to launch everything right\n"
"```bash\n"
"echo \"127.0.0.1 yunohost.org\" >> /etc/hosts\n"
"echo \"chromium --user-data-dir=/root/.config/chromium "
"--app=https://yunohost.org/yunohost/admin/\" >> /etc/xdg/openbox/autostart\n"
"echo -e \"if [ -z \\\"\\$DISPLAY\\\" ] && [ \\$(tty) == /dev/tty1 ]; \\nthen "
"\\n    startx \\nfi\" >> /root/.bashrc\n"
"certutil -d sql:$HOME/.pki/nssdb -A -t \"C,,\" -n YunoHostCA  -i "
"/etc/yunohost/certs/yunohost.org/ca.pem\n"
"certutil -d sql:$HOME/.pki/nssdb -A -t \"P,,\" -n YunoHostCrt -i "
"/etc/yunohost/certs/yunohost.org/crt.pem\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:85
#, no-wrap
msgid ""
"11. **chroot** Edit `/etc/inittab` to login automatically\n"
"```bash\n"
"nano /etc/inittab\n"
"# Replace the following line\n"
"1:2345:respawn:/sbin/getty 38400 tty1\n"
"# by this one\n"
"1:2345:respawn:/bin/login -f root tty1 </dev/tty1 >/dev/tty1 2>&1\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:98
#, no-wrap
msgid ""
"12. **chroot** Clean up our Debian environment before leaving.\n"
"```bash\n"
"rm -f /var/lib/dbus/machine-id && \n"
"apt-get clean && \n"
"rm -rf /tmp/* && \n"
"rm /etc/resolv.conf && \n"
"umount -lf /proc && \n"
"umount -lf /sys && \n"
"umount -lf /dev/pts\n"
"# Then exit\n"
"exit\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:103
#, no-wrap
msgid ""
"13. Unmount dev from the chroot \n"
"```bash\n"
"sudo umount -lf chroot/dev\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:108
#, no-wrap
msgid ""
"14. Make directories that will be copied to our bootable medium. \n"
"```bash\n"
"mkdir -p image/{live,isolinux}\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:113
#, no-wrap
msgid ""
"15. Compress the chroot environment into a Squash filesystem.\n"
"```bash\n"
"sudo mksquashfs chroot image/live/filesystem.squashfs -e boot\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:119
#, no-wrap
msgid ""
"16. Prepare our USB/CD bootloader.\n"
"```bash\n"
"cp chroot/boot/vmlinuz-3.2.0-4-486 image/live/vmlinuz1 && \n"
"cp chroot/boot/initrd.img-3.2.0-4-486 image/live/initrd1\n"
"```\n"
msgstr ""

#. type: Bullet: '17. '
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:121
msgid "Create `image/isolinux/isolinux.cfg` menu for the bootloader."
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:124
msgid "```bash UI menu.c32"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:127
msgid "prompt 0 menu title YunoHost Live"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:129
msgid "timeout 300"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:136
msgid ""
"label YunoHost Live menu label ^YunoHost Live menu default kernel "
"/live/vmlinuz1 append initrd=/live/initrd1 boot=live ```"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:138
msgid "### Build the .iso"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:140
msgid "Copy files necessary for the ISO to boot and then create the ISO"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:146
msgid ""
"```bash cp /usr/lib/syslinux/isolinux.bin image/isolinux/ && cp "
"/usr/lib/syslinux/menu.c32 image/isolinux/ cd image && genisoimage "
"-rational-rock -volid \"YunoHost Live\" -cache-inodes -joliet "
"-full-iso9660-filenames -b isolinux/isolinux.bin -c isolinux/boot.cat "
"-no-emul-boot -boot-load-size 4 -boot-info-table -output "
"../yunohost-live.iso . && cd ..  ```"
msgstr ""

#. type: Plain text
#: /home/jb/Projects/Simon/content/pages/contributor/create_live_usb.md:147
msgid ""
"Great success! Now you can burn the .iso or use "
"[Unetbootin](http://unetbootin.sourceforge.net/) to copy it on a USB key."
msgstr ""
